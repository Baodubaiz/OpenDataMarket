import { useQuery, useMutation, useQueryClient } from "@tanstack/react-query";
import {
    getAllReviews,
    getReviewById,
    createReview,
    updateReview,
    deleteReview,
} from "@/services/reviewService";
import { Review } from "@/types/index";

// ðŸ“Œ Láº¥y táº¥t cáº£ Ä‘Ã¡nh giÃ¡ (public)
export const useReviews = () => {
    return useQuery({
        queryKey: ["reviews"],
        queryFn: getAllReviews,
    });
};

// ðŸ“Œ Láº¥y 1 Ä‘Ã¡nh giÃ¡ cá»¥ thá»ƒ
export const useReviewById = (id: string) => {
    return useQuery({
        queryKey: ["review", id],
        queryFn: () => getReviewById(id),
        enabled: !!id,
    });
};

// ðŸ“Œ Táº¡o Ä‘Ã¡nh giÃ¡ (buyer)
export const useCreateReview = (token: string) => {
    const queryClient = useQueryClient();
    return useMutation({
        mutationFn: (data: Partial<Review>) => createReview(data, token),
        onSuccess: () =>
            queryClient.invalidateQueries({ queryKey: ["reviews"] }),
    });
};

// ðŸ“Œ Cáº­p nháº­t Ä‘Ã¡nh giÃ¡ (buyer)
export const useUpdateReview = (token: string) => {
    const queryClient = useQueryClient();
    return useMutation({
        mutationFn: ({ id, data }: { id: string; data: Partial<Review> }) =>
            updateReview(id, data, token),
        onSuccess: () =>
            queryClient.invalidateQueries({ queryKey: ["reviews"] }),
    });
};

// ðŸ“Œ XÃ³a Ä‘Ã¡nh giÃ¡ (buyer hoáº·c admin)
export const useDeleteReview = (token: string) => {
    const queryClient = useQueryClient();
    return useMutation({
        mutationFn: (id: string) => deleteReview(id, token),
        onSuccess: () =>
            queryClient.invalidateQueries({ queryKey: ["reviews"] }),
    });
};
